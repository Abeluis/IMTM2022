q3, max, rango, rango_iq, s, c))
# Indice IMTM 2022
min <- min(IMTM_2022$IMTM_2022, na.rm = TRUE)
q1 <- quantile(IMTM_2022$IMTM_2022, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
mediana <- median.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
var <- var(IMTM_2022$IMTM_2022, na.rm = TRUE)
desvest <- sd(IMTM_2022$IMTM_2022, na.rm = TRUE)
q3 <- quantile(IMTM_2022$IMTM_2022, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2022$IMTM_2022, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2022$IMTM_2022) /sqrt(6/1401)
c <- kurtosi(IMTM_2022$IMTM_2022) /sqrt(6/1401)
Descriptivos_IMTM <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
descriptivos <- data.frame(nombres, Descriptivos_IMTM_2015, Descriptivos_IMTM)
descriptivos <- select(descriptivos, nombres, Descriptivos_IMTM_2015,
Descriptivos_IMTM)
descriptivos <- mutate(descriptivos, Diferencia = (Descriptivos_IMTM -
Descriptivos_IMTM_2015))
kable(descriptivos, digits = 3, align = 'c',
caption = "Diferencia estadística descriptiva IMTM 2015 y 2022",
col.names = c("Nombre", "IMTM 2015", "IMTM 2022", "Diferencia"))
contrastar <- select(cuestionarios, Provincia, Municipio, IMTM_2022)
contrastar$IMTM_2015 <- IMTM_2015$IMTM_2015
contrastar <- mutate(contrastar, Diferencia = (IMTM_2022-IMTM_2015))
kable(contrastar, digits = 2, align = 'c',
caption = "Diferencia IMTM 2015 y 2022",
col.names = c("Provincia", "Municipio", "IMTM 2022", "IMTM 2015",
"Diferencia"))
## Boxplot IMTM 2015 y 2022
#  Apilar valores IMTM como factor
contrastar <- cbind(contrastar[1:2:5], stack(contrastar[3:4]))
contrastar <- rename(contrastar, Valores = values, Índice = ind)
qplot(data = contrastar, x = Índice, y = Valores, fill = Índice,
geom = "boxplot", main = "Gráfico de caja IMTM 2015 y 2022") +
scale_fill_discrete(guide = "none") + scale_fill_brewer(palette = "Dark2")
# Quitar valores NA base de datos cuestionarios
cuestionarios <- na.omit(cuestionarios)
medidas_seguridad <- na.omit(medidas_seguridad)
procesos <- na.omit(procesos)
tramites <- na.omit(tramites)
# Dataframe IT
IT <- select(cuestionarios, Municipio, seg_info, num_serv, IT)
kable(IT, digits= 2, caption = "IT Region del Biobío", align = 'c',
col.names = c("Municipalidades", "Medidas seguridad",
"Numero de servidores", "IT"))
# Dataframe RRHH
RRHH <- select(cuestionarios, Municipio, area_info, educ_info, org_info, RRHH)
kable(RRHH, digits = 2, caption = "RRHH Region del Biobío", align = 'c',
col.names = c("Municipalidades", "Area informática",
"Nivel educacional encargado", "Area dependencia", "RRHH"))
# Dataframe GTM
GTM <- select(cuestionarios, Municipio, intranet, procesos,
estrategia_servicios, GTM)
kable(GTM, digits= 2, caption = "GTM Region del Biobío", align = 'c',
col.names = c("Municipalidades", "Intranet",
"Informatización procesos internos", "Estrategia a ciudadanos", "GTM"))
# Dimensión SML
SML <- select(cuestionarios, Municipio, tramites, SML)
kable(SML, digits= 2, caption =
"SML Region del Biobío", align = 'c', col.names = c("Municipalidades",
"Digitalización trámites", "SML"))
# Dimensión IT
# Crear elementos estadísticos
min <- min(IT$IT, na.rm = TRUE)
q1 <- quantile(IT$IT, probs = 0.25, na.rm = TRUE)
media <- mean.default(IT$IT, na.rm = TRUE)
mediana <- median.default(IT$IT, na.rm = TRUE)
var <- var(IT$IT, na.rm = TRUE)
desvest <- sd(IT$IT, na.rm = TRUE)
q3 <- quantile(IT$IT, probs = 0.75, na.rm = TRUE)
max <- max(IT$IT, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IT$IT) /sqrt(6/1401)
c <- kurtosi(IT$IT) /sqrt(6/1401)
# Crear vector con valores numéricos
Descriptivos_IT <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
# Dimensión RRHH
min <- min(RRHH$RRHH, na.rm = TRUE)
q1 <- quantile(RRHH$RRHH, probs = 0.25, na.rm = TRUE)
media <- mean.default(RRHH$RRHH, na.rm = TRUE)
mediana <- median.default(RRHH$RRHH, na.rm = TRUE)
var <- var(RRHH$RRHH, na.rm = TRUE)
desvest <- sd(RRHH$RRHH, na.rm = TRUE)
q3 <- quantile(RRHH$RRHH, probs = 0.75, na.rm = TRUE)
max <- max(RRHH$RRHH, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(RRHH$RRHH) /sqrt(6/1401)
c <- kurtosi(RRHH$RRHH) /sqrt(6/1401)
Descriptivos_RRHH <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
# Descriptivos GTM
min <- min(GTM$GTM, na.rm = TRUE)
q1 <- quantile(GTM$GTM, probs = 0.25, na.rm = TRUE)
media <- mean.default(GTM$GTM, na.rm = TRUE)
mediana <- median.default(GTM$GTM, na.rm = TRUE)
var <- var(GTM$GTM, na.rm = TRUE)
desvest <- sd(GTM$GTM, na.rm = TRUE)
q3 <- quantile(GTM$GTM, probs = 0.75, na.rm = TRUE)
max <- max(GTM$GTM, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(GTM$GTM) /sqrt(6/1401)
c <- kurtosi(GTM$GTM) /sqrt(6/1401)
Descriptivos_GTM <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
# Descriptivos SML
min <- min(SML$SML, na.rm = TRUE)
q1 <- quantile(SML$SML, probs = 0.25, na.rm = TRUE)
media <- mean.default(SML$SML, na.rm = TRUE)
mediana <- median.default(SML$SML, na.rm = TRUE)
var <- var(SML$SML, na.rm = TRUE)
desvest <- sd(SML$SML, na.rm = TRUE)
q3 <- quantile(SML$SML, probs = 0.75, na.rm = TRUE)
max <- max(SML$SML, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(SML$SML) /sqrt(6/1401)
c <- kurtosi(SML$SML) /sqrt(6/1401)
Descriptivos_SML <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
# Indice IMTM 2022
min <- min(IMTM_2022$IMTM_2022, na.rm = TRUE)
q1 <- quantile(IMTM_2022$IMTM_2022, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
mediana <- median.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
var <- var(IMTM_2022$IMTM_2022, na.rm = TRUE)
desvest <- sd(IMTM_2022$IMTM_2022, na.rm = TRUE)
q3 <- quantile(IMTM_2022$IMTM_2022, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2022$IMTM_2022, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2022$IMTM_2022) /sqrt(6/1401)
c <- kurtosi(IMTM_2022$IMTM_2022) /sqrt(6/1401)
Descriptivos_IMTM <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
# Creación Dataframe estadísticos descriptivos por dimensión
descriptivos <- data.frame(nombres, Descriptivos_IT, Descriptivos_RRHH,
Descriptivos_GTM, Descriptivos_SML)
kable(descriptivos, digits = 2, align = 'c', caption =
"Estadística descriptiva Dimensiones IMTM 2022 Región del Biobío",
col.names = c("Descriptivos", "IT", "RRHH", "GTM","SML"))
correlacion <- select(cuestionarios, Provincia, Municipio, FIGEM, IT, RRHH,
GTM, SML, IMTM_2022)
correlacion <- na.omit(correlacion)
cor_IT <- cor(correlacion$IT, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor_RRHH <- cor(correlacion$RRHH, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor_GTM <- cor(correlacion$GTM, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor_SML <- cor(correlacion$SML, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
nombres_correlacion <- c("Correlación con IT", "Correlación con RRHH",
"Correlación con GTM", "Correlación con SML")
valores_correlacion <- c(cor_IT, cor_RRHH, cor_GTM, cor_SML)
correlacion_IMTM <- data.frame(nombres_correlacion, valores_correlacion)
kable(correlacion_IMTM, digits = 3, align = 'c', caption =
"Correlación entre las dimensiones y el IMTM",
col.names = c("Dimensiones", "Correlación"))
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[18:21]))
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
qplot(data = diferencia_dim, y = Dimensiones, x = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none") + scale_fill_brewer(palette = "Dark2")
## Gráfico Cleveland de puntos IMTM agrupado por Provincia
cleveland <- select(cuestionarios, Provincia, Municipio, FIGEM, IMTM_2022,
IT, RRHH, GTM, SML)
# Poner los nombres, ordenarlos primero por provincia y luego por IMTM
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$IMTM_2022)]
# Convertir nombres en factor, con niveles en el orden de nameorder
cleveland$Municipio <- factor(cleveland$Municipio, levels = nameorder)
ggplot(cleveland, aes(x = IMTM_2022, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.15), legend.justification = c(0.90, 0.15))
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$IT)]
cleveland$Municipio <- factor(cleveland$Municipio, levels = nameorder)
ggplot(cleveland, aes(x = IT, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.15), legend.justification = c(0.90, 0.15))
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$RRHH)]
cleveland$Municipio <- factor(cleveland$Municipio, levels = nameorder)
ggplot(cleveland, aes(x = RRHH, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.98, 0.28), legend.justification = c(0.98, 0.28))
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$GTM)]
cleveland$Municipio <- factor(cleveland$Municipio, levels = nameorder)
ggplot(cleveland, aes(x = GTM, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.15), legend.justification = c(0.90, 0.15))
cleveland_procesos <- select(cuestionarios, Provincia, Municipio, FIGEM,
procesos)
nameorder <- cleveland_procesos$Municipio[order(cleveland_procesos$Provincia,
cleveland_procesos$procesos)]
cleveland_procesos$Municipio <- factor(cleveland_procesos$Municipio, levels = nameorder)
ggplot(cleveland_procesos, aes(x = procesos, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.30), legend.justification = c(0.90, 0.30))
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$SML)]
cleveland$Municipio <- factor(cleveland$Municipio, levels = nameorder)
ggplot(cleveland, aes(x = SML, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) +
labs(title = "",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(0.90, 0.15), legend.justification = c(0.90, 0.15))
# seg_info datos
Total_seg_info <- colSums(medidas_seguridad[ , 4:7], na.rm = TRUE)
nombre_seg_info <- c("Antivirus", "Antispam", "Firewall",
"Autentificación y Criptografia")
lista_seg_info <- c(1:4)
lista_seg_info <- factor(lista_seg_info)
Total_seg_info <- data.frame(lista_seg_info, nombre_seg_info, Total_seg_info)
Total_seg_info <- mutate(Total_seg_info, no_seg_info = (30-Total_seg_info))
row.names(Total_seg_info) <- NULL
kable(Total_seg_info, caption = "Total de medidas de seguridad", align= 'c',
col.names = c("Num", "Medidas de seguridad", "Total", "Faltantes"))
# seg_info gráfico
ggplot(Total_seg_info, aes(x = lista_seg_info, y = Total_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge",
width = 0.5) +
scale_x_discrete("") + scale_y_continuous("Cantidad") +
labs(title = "") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") +
guides(fill=guide_legend(title="Medidas de seguridad"))
# num_serv datos
cant_serv <- c("Ninguno", "Uno", "Dos", "Tres", "Cuatro", "Seis", "Diez", "NA")
total_serv <- medidas_seguridad %>% count(cant_serv)
total_serv <- total_serv$n # Elim
Total_num_serv <- data.frame(cant_serv, total_serv)
View(IT)
# Archivo cargado con la libreria "readxl", libros separados
cuestionarios <- read_excel("Base.xlsx", sheet = 1)
medidas_seguridad <- read_excel("Base.xlsx", sheet = 2)
procesos <- read_excel("Base.xlsx", sheet = 3)
tramites <- read_excel("Base.xlsx", sheet = 4)
IMTM_2015 <- read_excel("Base.xlsx", sheet = 5)
# Sumar filas de variables subindices
medidas_seguridad <- medidas_seguridad %>%
mutate(num_seg = rowSums(.[4:7]))
procesos <- procesos %>%
mutate(num_procesos = rowSums(.[4:21]))
tramites <- tramites %>%
mutate(num_tramites = rowSums(.[4:26]))
# Calcular indicador con fórmula lineal
medidas_seguridad <- mutate(medidas_seguridad, seg_info = (num_seg)/4)
procesos <- mutate(procesos, procesos = (num_procesos)/18)
tramites <- mutate(tramites, tramites = (num_tramites)/18)
# Limitar valor máximo a 1 según fórmula
tramites$tramites <- ifelse(tramites$tramites > 1,1, tramites$tramites)
# Agregar variables transformadas
cuestionarios$seg_info <- medidas_seguridad$seg_info
cuestionarios$procesos <- procesos$procesos
cuestionarios$tramites <- tramites$tramites
# Conversión a valores numericos
cuestionarios <- cuestionarios %>%
mutate_at(c('seg_info', 'num_serv', 'area_info', 'educ_info',
'org_info', 'org_info_dep', 'procesos', 'tramites'), as.numeric)
# Creación de las dimensiones
cuestionarios <- mutate(cuestionarios, IT = (seg_info + num_serv)/2) %>%
mutate(cuestionarios, RRHH = (area_info + educ_info + org_info)/3) %>%
mutate(cuestionarios, GTM = (intranet + procesos + estrategia_servicios)/3) %>%
mutate(cuestionarios, SML = (tramites)) %>%
mutate(cuestionarios, IMTM_2022= (IT + RRHH + GTM + SML)/4)
# Valores redondeados 2 decimales
# Creación Dataframe IMTM 2022
IMTM_2022 <- select(cuestionarios, Provincia, Municipio, FIGEM, IMTM_2022)
IMTM_2022 <- na.exclude(IMTM_2022)
# Creación Tabla
kable(IMTM_2022, digits= 2, caption = "IMTM Region del Biobío", align = 'c',
col.names = c("Provincia", "Municipalidades", "Tipología", "IMTM"))
# Resultados como ranking
IMTM_2022_rank <- IMTM_2022 %>% arrange(desc(IMTM_2022)) %>%
na.omit(IMTM_2022_rank) # Quitar valores N.A
Ranking <- c(1:33)
IMTM_2022_rank <- cbind(Ranking, IMTM_2022_rank)
kable(IMTM_2022_rank, digits= 2, caption = "IMTM Region del Biobío", align =
'c', col.names = c("Ranking", "Provincia", "Municipalidades", "Tipología", "IMTM"))
# Estadística descriptiva IMTM 2015
# Crear vector characters con nombres estadísticos
nombres <- c("Mínimo", "Cuartil 1", "Media", "Mediana", "Varianza",
"Desviación Estándar", "Cuartil 3", "Máximo", "Rango",
"Rango intercuartil", "Simetría", "Curtosis")
IMTM_2015 <- IMTM_2015 %>% mutate_at(c('IMTM_2015'), as.numeric)
min <- min(IMTM_2015$IMTM_2015, na.rm = TRUE)
q1 <- quantile(IMTM_2015$IMTM_2015, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2015$IMTM_2015, na.rm = TRUE)
mediana <- median.default(IMTM_2015$IMTM_2015, na.rm = TRUE)
var <- var(IMTM_2015$IMTM_2015, na.rm = TRUE)
desvest <- sd(IMTM_2015$IMTM_2015, na.rm = TRUE)
q3 <- quantile(IMTM_2015$IMTM_2015, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2015$IMTM_2015, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2015$IMTM_2015) /sqrt(6/1401)
c <- kurtosi(IMTM_2015$IMTM_2015) /sqrt(6/1401)
Descriptivos_IMTM_2015 <- as.numeric(c(min, q1, media, mediana, var, desvest,
q3, max, rango, rango_iq, s, c))
# Indice IMTM 2022
min <- min(IMTM_2022$IMTM_2022, na.rm = TRUE)
q1 <- quantile(IMTM_2022$IMTM_2022, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
mediana <- median.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
var <- var(IMTM_2022$IMTM_2022, na.rm = TRUE)
desvest <- sd(IMTM_2022$IMTM_2022, na.rm = TRUE)
q3 <- quantile(IMTM_2022$IMTM_2022, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2022$IMTM_2022, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2022$IMTM_2022) /sqrt(6/1401)
c <- kurtosi(IMTM_2022$IMTM_2022) /sqrt(6/1401)
Descriptivos_IMTM <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
descriptivos <- data.frame(nombres, Descriptivos_IMTM_2015, Descriptivos_IMTM)
descriptivos <- select(descriptivos, nombres, Descriptivos_IMTM_2015,
Descriptivos_IMTM)
descriptivos <- mutate(descriptivos, Diferencia = (Descriptivos_IMTM -
Descriptivos_IMTM_2015))
kable(descriptivos, digits = 3, align = 'c',
caption = "Diferencia estadística descriptiva IMTM 2015 y 2022",
col.names = c("Nombre", "IMTM 2015", "IMTM 2022", "Diferencia"))
contrastar <- select(cuestionarios, Provincia, Municipio, IMTM_2022)
contrastar$IMTM_2015 <- IMTM_2015$IMTM_2015
contrastar <- mutate(contrastar, Diferencia = (IMTM_2022-IMTM_2015))
kable(contrastar, digits = 2, align = 'c',
caption = "Diferencia IMTM 2015 y 2022",
col.names = c("Provincia", "Municipio", "IMTM 2022", "IMTM 2015",
"Diferencia"))
## Boxplot IMTM 2015 y 2022
#  Apilar valores IMTM como factor
contrastar <- cbind(contrastar[1:2:5], stack(contrastar[3:4]))
contrastar <- rename(contrastar, Valores = values, Índice = ind)
qplot(data = contrastar, x = Índice, y = Valores, fill = Índice,
geom = "boxplot", main = "Gráfico de caja IMTM 2015 y 2022") +
scale_fill_discrete(guide = "none") + scale_fill_brewer(palette = "Dark2")
# Quitar valores NA base de datos cuestionarios
cuestionarioss <- na.omit(cuestionarios)
View(cuestionarioss)
View(cuestionarios)
# Archivo cargado con la libreria "readxl", libros separados
cuestionarios <- read_excel("Base.xlsx", sheet = 1)
medidas_seguridad <- read_excel("Base.xlsx", sheet = 2)
procesos <- read_excel("Base.xlsx", sheet = 3)
tramites <- read_excel("Base.xlsx", sheet = 4)
IMTM_2015 <- read_excel("Base.xlsx", sheet = 5)
# Sumar filas de variables subindices
medidas_seguridad <- medidas_seguridad %>%
mutate(num_seg = rowSums(.[4:7]))
procesos <- procesos %>%
mutate(num_procesos = rowSums(.[4:21]))
tramites <- tramites %>%
mutate(num_tramites = rowSums(.[4:26]))
# Calcular indicador con fórmula lineal
medidas_seguridad <- mutate(medidas_seguridad, seg_info = (num_seg)/4)
procesos <- mutate(procesos, procesos = (num_procesos)/18)
tramites <- mutate(tramites, tramites = (num_tramites)/18)
# Limitar valor máximo a 1 según fórmula
tramites$tramites <- ifelse(tramites$tramites > 1,1, tramites$tramites)
# Agregar variables transformadas
cuestionarios$seg_info <- medidas_seguridad$seg_info
cuestionarios$procesos <- procesos$procesos
cuestionarios$tramites <- tramites$tramites
# Conversión a valores numericos
cuestionarios <- cuestionarios %>%
mutate_at(c('seg_info', 'num_serv', 'area_info', 'educ_info',
'org_info', 'org_info_dep', 'procesos', 'tramites'), as.numeric)
# Creación de las dimensiones
cuestionarios <- mutate(cuestionarios, IT = (seg_info + num_serv)/2) %>%
mutate(cuestionarios, RRHH = (area_info + educ_info + org_info)/3) %>%
mutate(cuestionarios, GTM = (intranet + procesos + estrategia_servicios)/3) %>%
mutate(cuestionarios, SML = (tramites)) %>%
mutate(cuestionarios, IMTM_2022= (IT + RRHH + GTM + SML)/4)
# Valores redondeados 2 decimales
# Creación Dataframe IMTM 2022
IMTM_2022 <- select(cuestionarios, Provincia, Municipio, FIGEM, IMTM_2022)
IMTM_2022 <- na.exclude(IMTM_2022)
# Creación Tabla
kable(IMTM_2022, digits= 2, caption = "IMTM Region del Biobío", align = 'c',
col.names = c("Provincia", "Municipalidades", "Tipología", "IMTM"))
# Resultados como ranking
IMTM_2022_rank <- IMTM_2022 %>% arrange(desc(IMTM_2022)) %>%
na.omit(IMTM_2022_rank) # Quitar valores N.A
Ranking <- c(1:33)
IMTM_2022_rank <- cbind(Ranking, IMTM_2022_rank)
kable(IMTM_2022_rank, digits= 2, caption = "IMTM Region del Biobío", align =
'c', col.names = c("Ranking", "Provincia", "Municipalidades", "Tipología", "IMTM"))
# Estadística descriptiva IMTM 2015
# Crear vector characters con nombres estadísticos
nombres <- c("Mínimo", "Cuartil 1", "Media", "Mediana", "Varianza",
"Desviación Estándar", "Cuartil 3", "Máximo", "Rango",
"Rango intercuartil", "Simetría", "Curtosis")
IMTM_2015 <- IMTM_2015 %>% mutate_at(c('IMTM_2015'), as.numeric)
min <- min(IMTM_2015$IMTM_2015, na.rm = TRUE)
q1 <- quantile(IMTM_2015$IMTM_2015, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2015$IMTM_2015, na.rm = TRUE)
mediana <- median.default(IMTM_2015$IMTM_2015, na.rm = TRUE)
var <- var(IMTM_2015$IMTM_2015, na.rm = TRUE)
desvest <- sd(IMTM_2015$IMTM_2015, na.rm = TRUE)
q3 <- quantile(IMTM_2015$IMTM_2015, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2015$IMTM_2015, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2015$IMTM_2015) /sqrt(6/1401)
c <- kurtosi(IMTM_2015$IMTM_2015) /sqrt(6/1401)
Descriptivos_IMTM_2015 <- as.numeric(c(min, q1, media, mediana, var, desvest,
q3, max, rango, rango_iq, s, c))
# Indice IMTM 2022
min <- min(IMTM_2022$IMTM_2022, na.rm = TRUE)
q1 <- quantile(IMTM_2022$IMTM_2022, probs = 0.25, na.rm = TRUE)
media <- mean.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
mediana <- median.default(IMTM_2022$IMTM_2022, na.rm = TRUE)
var <- var(IMTM_2022$IMTM_2022, na.rm = TRUE)
desvest <- sd(IMTM_2022$IMTM_2022, na.rm = TRUE)
q3 <- quantile(IMTM_2022$IMTM_2022, probs = 0.75, na.rm = TRUE)
max <- max(IMTM_2022$IMTM_2022, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(IMTM_2022$IMTM_2022) /sqrt(6/1401)
c <- kurtosi(IMTM_2022$IMTM_2022) /sqrt(6/1401)
Descriptivos_IMTM <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
descriptivos <- data.frame(nombres, Descriptivos_IMTM_2015, Descriptivos_IMTM)
descriptivos <- select(descriptivos, nombres, Descriptivos_IMTM_2015,
Descriptivos_IMTM)
descriptivos <- mutate(descriptivos, Diferencia = (Descriptivos_IMTM -
Descriptivos_IMTM_2015))
kable(descriptivos, digits = 3, align = 'c',
caption = "Diferencia estadística descriptiva IMTM 2015 y 2022",
col.names = c("Nombre", "IMTM 2015", "IMTM 2022", "Diferencia"))
contrastar <- select(cuestionarios, Provincia, Municipio, IMTM_2022)
contrastar$IMTM_2015 <- IMTM_2015$IMTM_2015
contrastar <- mutate(contrastar, Diferencia = (IMTM_2022-IMTM_2015))
kable(contrastar, digits = 2, align = 'c',
caption = "Diferencia IMTM 2015 y 2022",
col.names = c("Provincia", "Municipio", "IMTM 2022", "IMTM 2015",
"Diferencia"))
## Boxplot IMTM 2015 y 2022
#  Apilar valores IMTM como factor
contrastar <- cbind(contrastar[1:2:5], stack(contrastar[3:4]))
contrastar <- rename(contrastar, Valores = values, Índice = ind)
qplot(data = contrastar, x = Índice, y = Valores, fill = Índice,
geom = "boxplot", main = "Gráfico de caja IMTM 2015 y 2022") +
scale_fill_discrete(guide = "none") + scale_fill_brewer(palette = "Dark2")
# Quitar valores NA base de datos cuestionarios
cuestionarioss <- na.omit(cuestionarios)
medidas_seguridad <- na.omit(medidas_seguridad)
procesos <- na.omit(procesos)
tramites <- na.omit(tramites)
# Quitar valores NA base de datos cuestionarios
cuestionarios <- na.omit(cuestionarios)
# Quitar valores NA base de datos cuestionarios
cuestionarios <- na.omit(cuestionarios)
medidas_seguridad <- na.omit(medidas_seguridad)
procesos <- na.omit(procesos)
tramites <- na.omit(tramites)
# Dataframe IT
IT <- select(cuestionarios, Municipio, seg_info, num_serv, IT)
kable(IT, digits= 2, caption = "IT Region del Biobío", align = 'c',
col.names = c("Municipalidades", "Medidas seguridad",
"Numero de servidores", "IT"))
# Dataframe RRHH
RRHH <- select(cuestionarios, Municipio, area_info, educ_info, org_info, RRHH)
kable(RRHH, digits = 2, caption = "RRHH Region del Biobío", align = 'c',
col.names = c("Municipalidades", "Area informática",
"Nivel educacional encargado", "Area dependencia", "RRHH"))
nameorder <- cleveland$Municipio[order(cleveland$Provincia,
cleveland$RRHH)]
