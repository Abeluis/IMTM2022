geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Realizar gráfica cleaveland IT
nameorder <- plot$Municipio[order(plot$Provincia, plot$IT)]
plot$Municipio <- factor(plot$Municipio, levels = nameorder)
ggplot(plot, aes(x = IT, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Realizar gráfico cleaveland RRHH
nameorder <- plot$Municipio[order(plot$Provincia, plot$RRHH)]
plot$Municipio <- factor(plot$Municipio, levels = nameorder)
ggplot(plot, aes(x = RRHH, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Realizar gráfico cleaveland GTM
nameorder <- plot$Municipio[order(plot$Provincia, plot$GTM)]
plot$Municipio <- factor(plot$Municipio, levels = nameorder)
ggplot(plot, aes(x = GTM, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Realizar gráfico cleaveland procesos
plot_prc <- select(cuestionarios, Provincia, Municipio, procesos)
nameorder <- plot_prc$Municipio[order(plot_prc$Provincia, plot_prc$procesos)]
plot_prc$Municipio <- factor(plot_prc$Municipio, levels = nameorder)
ggplot(plot_prc, aes(x = procesos, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Realizar gráfico cleaveland SML
nameorder <- plot$Municipio[order(plot$Provincia, plot$SML)]
plot$Municipio <- factor(plot$Municipio, levels = nameorder)
ggplot(plot, aes(x = SML, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 2, aes(colour = Provincia)) + labs(title = "",
y = "Municipios", x = "Valores" ) + scale_colour_brewer(palette = "Set1", limits =                    c("Concepción", "Biobío", "Arauco")) + theme_bw() + theme(panel.grid.major.y =
element_blank(), legend.position = c(0.99, 0.3), legend.justification = c(0.99, 0.3))
# Resultados IT
# seg_info datos
Total_seg_info <- colSums(medidas_seguridad[ , 4:7], na.rm = TRUE)
txt_seg_info <- c("Antivirus", "Antispam", "Firewall", "Autentificación y Criptografia")
# Preparar dataframe
lista_seg_info <- c(1:4)
lista_seg_info <- factor(lista_seg_info)
Total_seg_info <- data.frame(lista_seg_info, txt_seg_info, Total_seg_info)
Total_seg_info <- mutate(Total_seg_info, no_seg_info = (33-Total_seg_info))
row.names(Total_seg_info) <- NULL
# Crear tabla
kable(Total_seg_info, caption = "Total de medidas de seguridad", align= 'r',
col.names = c("Num", "Medidas de seguridad", "Total", "Faltantes"))
# seg_info gráfico
ggplot(Total_seg_info, aes(x = lista_seg_info, y = Total_seg_info)) +
geom_col(aes(fill = txt_seg_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Cantidad") +
labs(title = "") + geom_text(aes(label = Total_seg_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill=guide_legend(title="Medidas de seguridad"))
# num_serv datos
cant_serv <- c("Ninguno", "Uno", "Dos", "Tres", "Cuatro", "Seis", "Diez")
total_serv <- medidas_seguridad %>% count(cant_serv)
total_serv <- total_serv$n # Elim
Total_num_serv <- data.frame(cant_serv, total_serv)
row.names(Total_num_serv) <- NULL
kable(Total_num_serv, caption = "Cantidad de servidores", align= 'r',
col.names = c("Cantidad", "Total"))
kable(Total_num_serv, caption = "Cantidad de servidores", align= 'r',
col.names = c("Cantidad", "Total"))
# num_serv gráfico
ggplot(Total_num_serv, aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col(aes(fill = cant_serv), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Servidores") + scale_y_continuous("Frecuencia") +
labs(title = "") +
geom_text(aes(label = total_serv), vjust = -0.3) + scale_fill_brewer(palette = "Dark2")   + guides(fill = FALSE)
# num_serv gráfico
ggplot(Total_num_serv, aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col(aes(fill = cant_serv), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Servidores") + scale_y_continuous("Frecuencia") +
labs(title = "") +
geom_text(aes(label = total_serv), vjust = -0.3) + scale_fill_brewer(palette = "Dark2")   + guides(fill = "none")
# area_info datos
si_no <- c("No", "Si")
total_area_info <- RRHH %>% count(area_info)
total_area_info <- total_area_info$n
Total_area_info <- data.frame(si_no, total_area_info)
row.names(Total_area_info) <- NULL
kable(Total_area_info, caption = "Presencia de área informática municipal",
align= 'c', col.names = c("Presencia", "Total"))
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + scale_fill_discrete(guide = "none") + geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# num_serv gráfico
ggplot(Total_num_serv, aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col(aes(fill = cant_serv), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Servidores") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_serv), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2")   + guides(fill = "none")
# area_info gráfico
ggplot(Total_area_info, aes(x = si_no, y = total_area_info)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge", width = 0.5) +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "") + geom_text(aes(label = total_area_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# educ_info gráfico
ggplot(Total_educ_info, aes(x = nivel_educ, y = total_educ_info)) +
geom_col(aes(fill = nivel_educ), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Nivel") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_educ_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# educ_info datos
nivel_ed <- c("Tecnica nivel superior", "Superior pregrado", "Superior postgrado")
total_educ_info <- cuestionarios %>% count(educ_info_lvl)
total_educ_info <- total_educ_info$n
Total_educ_info <- data.frame(nivel_ed, total_educ_info)
row.names(Total_educ_info) <- NULL
kable(Total_educ_info, caption = "Nivel educacional encargado informática",
align= 'c', col.names = c("Nivel", "Total"))
# educ_info gráfico
ggplot(Total_educ_info, aes(x = nivel_educ, y = total_educ_info)) +
geom_col(aes(fill = nivel_educ), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Nivel") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_educ_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# educ_info gráfico
ggplot(Total_educ_info, aes(x = nivel_ed, y = total_educ_info)) +
geom_col(aes(fill = nivel_ed), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Nivel") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_educ_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# educ_info gráfico
ggplot(Total_educ_info, aes(x = nivel_ed, y = total_educ_info)) +
geom_col(aes(fill = nivel_ed), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Nivel") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_educ_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# educ_info gráfico
ggplot(Total_educ_info, aes(x = nivel_ed, y = total_educ_info)) +
geom_col(aes(fill = nivel_ed), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Nivel") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_educ_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# org_info datos
org_info <- c("Alcalde", "Adm. Municipal", "DAF", "SECPLAN", "Secr. Municipal", "Otro")
total_org_info <- cuestionarios %>% count(org_info_dep)
total_org_info <- total_org_info$n
Total_org_info <- data.frame(org_info, total_org_info)
row.names(Total_org_info) <- NULL
kable(Total_org_info, caption = "Depencia de la unidad de informática",
align= 'c', col.names = c("Dependencia", "Total"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info_c, total_org_info),
y = total_org_info)) +
geom_col(aes(fill = org_info_c), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") +
guides(fill=guide_legend(title="Dependencia"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info_c, total_org_info),
y = total_org_info)) +
geom_col(aes(fill = org_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") +
guides(fill=guide_legend(title="Dependencia"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info, total_org_info),
y = total_org_info)) +
geom_col(aes(fill = org_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") +
guides(fill=guide_legend(title="Dependencia"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info, total_org_info),
y = total_org_info)) +
geom_col(aes(fill = org_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") +
guides(fill=guide_legend(title="Dependencia"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info, total_org_info), y = total_org_info)) +
geom_col(aes(fill = org_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill=guide_legend(title="Dependencia"))
# org_info_gráfico
ggplot(Total_org_info, aes(x = fct_reorder(org_info, total_org_info), y = total_org_info)) +
geom_col(aes(fill = org_info), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_org_info), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill=guide_legend(title="Dependencia"))
# intranet datos
total_intranet <- cuestionarios %>% count(intranet)
total_intranet <- total_intranet$n
Total_intranet <- data.frame(si_no, total_intranet)
row.names(Total_intranet) <- NULL
kable(Total_intranet, caption = "Presencia de intranet municipal",
align= 'c', col.names = c("Presencia", "Total"))
# intranet gráfico
ggplot(Total_intranet, aes(x = si_no, y = total_intranet)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Presencia") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_intranet), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# intranet gráfico
ggplot(Total_intranet, aes(x = si_no, y = total_intranet)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Presencia") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_intranet), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# estrategia_servicios gráfico
ggplot(Total_estrategia_s, aes(x = si_no, y = total_estrategia_s)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Presencia") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_estrategia_s), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# estrategia_servicios datos
total_estrategia_s <- cuestionarios %>% count(estrategia_servicios)
total_estrategia_s <- total_estrategia_s$n
Total_estrategia_s <- data.frame(si_no, total_estrategia_s)
row.names(Total_estrategia_s) <- NULL
kable(Total_estrategia_s, caption = "Presencia de estrategia servicios municipales",
align= 'c', col.names = c("Presencia", "Total"))
# estrategia_servicios gráfico
ggplot(Total_estrategia_s, aes(x = si_no, y = total_estrategia_s)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Presencia") + scale_y_continuous("Frecuencia") +
labs(title = "") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_estrategia_s), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = FALSE)
# estrategia_servicios gráfico
ggplot(Total_estrategia_s, aes(x = si_no, y = total_estrategia_s)) +
geom_col(aes(fill = si_no), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Presencia") + scale_y_continuous("Frecuencia") +
labs(title = "") + geom_text(aes(label = total_estrategia_s), vjust = -0.3) +
scale_fill_brewer(palette = "Dark2") + guides(fill = "none")
# estrategia_gestión datos
total_estrategia_g <- cuestionarios %>% count(estrategia_gestion)
total_estrategia_g <- total_estrategia_g$n
Total_estrategia_g <- data.frame(si_no, total_estrategia_g)
row.names(Total_estrategia_s) <- NULL
kable(Total_estrategia_g, caption = "Presencia de estrategia de gestión municipal",
align= 'c', col.names = c("Presencia", "Total"))
# procesos datos
Total_proc <- colSums(procesos[ , 4:21], na.rm = TRUE) #1er paso
n_proc <- c("Inventario", "Oficina de Partes (Documentos)",
"Aseo y Ornato (Parques y Jardines)", "Planificación y control presupuestario",
"Ingreso/egreso Tesorería", "Rentas y Patentes", "Licencias de conducir",
"Permisos de circulación", "Juzgado de policía local y registro de multas", "Inspección",
"Administración del cementerio municipal", "Registro Social de hogares",
"Subsidios (incluye asistencia social y apoyo a la comunidad)", "OMIL (bolsa de empleo)",             "Organizaciones comunitarias", "Dirección de obras municipales (DOM)",
"Administración de consultorios / farmacias", "Ventanilla única") #2do paso
l_proc <- c(1:18)
T_proc <- data.frame(l_proc, n_proc, T_proc) # 3er crear DF
# procesos datos
T_proc <- colSums(procesos[ , 4:21], na.rm = TRUE) #1er paso
n_proc <- c("Inventario", "Oficina de Partes (Documentos)",
"Aseo y Ornato (Parques y Jardines)", "Planificación y control presupuestario",
"Ingreso/egreso Tesorería", "Rentas y Patentes", "Licencias de conducir",
"Permisos de circulación", "Juzgado de policía local y registro de multas", "Inspección",
"Administración del cementerio municipal", "Registro Social de hogares",
"Subsidios (incluye asistencia social y apoyo a la comunidad)", "OMIL (bolsa de empleo)",             "Organizaciones comunitarias", "Dirección de obras municipales (DOM)",
"Administración de consultorios / farmacias", "Ventanilla única") #2do paso
l_proc <- c(1:18)
T_proc <- data.frame(l_proc, n_proc, T_proc) # 3er crear DF
row.names(T_proc) <- NULL # 4to paso quitar rownames
kable(Total_procesos, caption = "Total de procesos", align = 'c',
col.names = c("Num", "Nombre procesos", "Total"))  # 5to paso crear tabla
# procesos datos
T_proc <- colSums(procesos[ , 4:21], na.rm = TRUE) #1er paso
n_proc <- c("Inventario", "Oficina de Partes (Documentos)",
"Aseo y Ornato (Parques y Jardines)", "Planificación y control presupuestario",
"Ingreso/egreso Tesorería", "Rentas y Patentes", "Licencias de conducir",
"Permisos de circulación", "Juzgado de policía local y registro de multas", "Inspección",
"Administración del cementerio municipal", "Registro Social de hogares",
"Subsidios (incluye asistencia social y apoyo a la comunidad)", "OMIL (bolsa de empleo)",             "Organizaciones comunitarias", "Dirección de obras municipales (DOM)",
"Administración de consultorios / farmacias", "Ventanilla única") #2do paso
l_proc <- c(1:18)
T_proc <- data.frame(l_proc, n_proc, T_proc) # 3er crear DF
row.names(T_proc) <- NULL # 4to paso quitar rownames
kable(T_proc, caption = "Total de procesos", align = 'c',
col.names = c("Num", "Nombre procesos", "Total"))  # 5to paso crear tabla
# procesos datos
T_proc <- colSums(procesos[ , 4:21], na.rm = TRUE) #1er paso
n_proc <- c("Inventario", "Oficina de Partes (Documentos)",
"Aseo y Ornato (Parques y Jardines)", "Planificación y control presupuestario",
"Ingreso/egreso Tesorería", "Rentas y Patentes", "Licencias de conducir",
"Permisos de circulación", "Juzgado de policía local y registro de multas", "Inspección",
"Administración del cementerio municipal", "Registro Social de hogares",
"Subsidios (incluye asistencia social y apoyo a la comunidad)", "OMIL (bolsa de empleo)",             "Organizaciones comunitarias", "Dirección de obras municipales (DOM)",
"Administración de consultorios / farmacias", "Ventanilla única") #2do paso
l_proc <- c(1:18)
T_proc <- data.frame(l_proc, n_proc, T_proc) # 3er crear DF
row.names(T_proc) <- NULL # 4to paso quitar rownames
kable(T_proc, caption = "Total de procesos", align = 'c',
col.names = c("Num", "Nombre procesos", "Total"))  # 5to paso crear tabla
# cleveland procesos
ggplot(T_proc, aes(x = T_proc, y = reorder(n_proc, T_pro))) +
geom_point(size = 2) + labs(title = "", y = "Nombre procesos",
x = "Total procesos municipales" ) +  theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
# cleveland procesos
ggplot(T_proc, aes(x = T_proc, y = reorder(n_proc, T_proc))) +
geom_point(size = 2) + labs(title = "", y = "Nombre procesos",
x = "Total procesos municipales" ) +  theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
cor_es_t <- cor(cuestionarios$estrategia_servicios, cuestionarios$tramites,
use = "everything", method=c("pearson"))
cor_eg_p <- cor(cuestionarios$estrategia_gestion, cuestionarios$procesos,
use = "everything", method=c("pearson"))
nombres_estrategias <- c("Estrategia servicios", "Estrategia gestión")
nombres_subindice <- c("Subíndice tramites", "Subíndice procesos")
valores_correlacion <- c(cor_es_tramites, cor_eg_procesos)
cor_es_t <- cor(cuestionarios$estrategia_servicios, cuestionarios$tramites,
use = "everything", method=c("pearson"))
cor_eg_p <- cor(cuestionarios$estrategia_gestion, cuestionarios$procesos,
use = "everything", method=c("pearson"))
nombres_estrategias <- c("Estrategia servicios", "Estrategia gestión")
nombres_subindice <- c("Subíndice tramites", "Subíndice procesos")
valores_correlacion <- c(cor_es_t, cor_eg_p)
cor_estrategias <- data.frame(nombres_estrategias, nombres_subindice, valores_correlacion)
kable(cor_estrategias, digits = 3, align = 'c', caption =
"Correlación entre estrategias y subíndices",
col.names = c("Estrategias", "Subíndices", "Correlación"))
cor_es_t <- cor(cuestionarios$estrategia_servicios, cuestionarios$tramites,
use = "everything", method=c("pearson"))
cor_eg_p <- cor(cuestionarios$estrategia_gestion, cuestionarios$procesos,
use = "everything", method=c("pearson"))
n_estrategias <- c("Estrategia servicios", "Estrategia gestión")
n_subindice <- c("Subíndice tramites", "Subíndice procesos")
valores_correlacion <- c(cor_es_t, cor_eg_p)
cor_estrategias <- data.frame(n_estrategias, n_subindice, valores_correlacion)
kable(cor_estrategias, digits = 3, align = 'c', caption =
"Correlación entre estrategias y subíndices",
col.names = c("Estrategias", "Subíndices", "Correlación"))
Total_tramite <- colSums(tramites[ , 4:26], na.rm = TRUE)
nombre_tramite <- c("Obtención de Patente comercial",
"Renovación de la Patente comercial", "Pago de la Patente comercial",
"Obtención de la Patente industrial", "Renovación de la Patente industrial",
"Obtención de Patente de alcoholes", "Renovación de la Patente de alcoholes",
"Pago de la Patente de alcoholes", "Certificado de no expropiación",
"Permiso de demolición", "Obtención de Permiso de edificación",
"Renovación de Permiso de edificación", "Pago de Permiso de edificación",
"Permiso de uso de bienes nacionales de uso público", "Informe de zonificación",
"Recepción de obra", "Certificado de informaciones previas", "Permiso de circulación",
"Pago de multas en Juzgado de policía local", "Solicitud de corte y poda de árboles",
"Solicitud de cambio de domicilio", "Obtención de Patente comercial", "Otro")
lista_tramite <- c(1:23)
Total_tramites <- data.frame(lista_tramite, nombre_tramite, Total_tramite)
row.names(Total_tramites) <- NULL
kable(Total_tramites, caption = "Total de trámites", align= 'c', col.names =
c("Num", "Nombre trámites", "Total"))
T_tramite <- colSums(tramites[ , 4:26], na.rm = TRUE)
n_tramite <- c("Obtención de Patente comercial",
"Renovación de la Patente comercial", "Pago de la Patente comercial",
"Obtención de la Patente industrial", "Renovación de la Patente industrial",
"Obtención de Patente de alcoholes", "Renovación de la Patente de alcoholes",
"Pago de la Patente de alcoholes", "Certificado de no expropiación",
"Permiso de demolición", "Obtención de Permiso de edificación",
"Renovación de Permiso de edificación", "Pago de Permiso de edificación",
"Permiso de uso de bienes nacionales de uso público", "Informe de zonificación",
"Recepción de obra", "Certificado de informaciones previas", "Permiso de circulación",
"Pago de multas en Juzgado de policía local", "Solicitud de corte y poda de árboles",
"Solicitud de cambio de domicilio", "Obtención de Patente comercial", "Otro")
l_tramite <- c(1:23)
T_tramites <- data.frame(l_tramite, n_tramite, T_tramite)
row.names(T_tramites) <- NULL
kable(T_tramites, caption = "Total de trámites", align= 'c', col.names =
c("Num", "Nombre trámites", "Total"))
FIGEM_1 <- filter(cuestionarios, FIGEM== 1)
FIGEM_2 <- filter(cuestionarios, FIGEM== 2)
FIGEM_3 <- filter(cuestionarios, FIGEM== 3)
FIGEM_4 <- filter(cuestionarios, FIGEM== 4)
FIGEM_5 <- filter(cuestionarios, FIGEM== 5)
Provincia_conce <- filter(cuestionarios, Provincia== "Concepción")
Provincia_biobio <- filter(cuestionarios, Provincia== "Biobío")
Provincia_arauco <- filter(cuestionarios, Provincia== "Arauco")
Descr_IT <- stats_descr(cuestionarios$IT)
Descr_F1 <- stats_descr(FIGEM_1$IMTM_2022)
Descr_F1 <- stats_descr(FIGEM_1$IMTM_2022)
Descr_F2 <- stats_descr(FIGEM_2$IMTM_2022)
Descr_F3 <- stats_descr(FIGEM_3$IMTM_2022)
Descr_F4 <- stats_descr(FIGEM_4$IMTM_2022)
Descr_F5 <- stats_descr(FIGEM_5$IMTM_2022)
Descr_F1 <- stats_descr(FIGEM_1$IMTM_2022)
Descr_F2 <- stats_descr(FIGEM_2$IMTM_2022)
Descr_F3 <- stats_descr(FIGEM_3$IMTM_2022)
Descr_F4 <- stats_descr(FIGEM_4$IMTM_2022)
Descr_F5 <- stats_descr(FIGEM_5$IMTM_2022)
Categorizar <- data.frame(Descr_F1, Descr_F2, Descr_F3, Descr_F4, Descr_F5)
kable(Categorizar, digits = 2, align = 'r', caption =
"Estadística descriptiva IMTM 2022 por FIGEM",
col.names = c("Descriptivos", "1", "2", "3","4", "5"))
Descr_F1 <- stats_descr(FIGEM_1$IMTM_2022)
Descr_F2 <- stats_descr(FIGEM_2$IMTM_2022)
Descr_F3 <- stats_descr(FIGEM_3$IMTM_2022)
Descr_F4 <- stats_descr(FIGEM_4$IMTM_2022)
Descr_F5 <- stats_descr(FIGEM_5$IMTM_2022)
Categorizar <- data.frame(Descr_F1, Descr_F2, Descr_F3, Descr_F4, Descr_F5)
kable(Categorizar, digits = 2, align = 'r', caption =
"Estadística descriptiva IMTM 2022 por FIGEM",
col.names = c("1", "2", "3","4", "5"))
cuestionarios$FIGEM <- factor(cuestionarios$FIGEM)
qplot(data = cuestionarios, x = FIGEM, y = IMTM_2022, fill = FIGEM,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por FIGEM 2022") +
scale_fill_brewer(palette = "Dark2")
cuestionarios$Provincia <- factor(cuestionarios$Provincia)
qplot(data = cuestionarios, x = Provincia, y = IMTM_2022, fill = Provincia,
geom = "boxplot", ylab = "Valor", main = "Gráfico de caja por provincia 2022") +
scale_fill_brewer(palette = "Dark2")
IMTM_2015$Provincia <- factor(IMTM_2015$Provincia)
qplot(data = IMTM_2015, x = Provincia, y = IMTM_2015, fill = Provincia,
geom = "boxplot", ylab = "Valor", main = "Gráfico de caja por provincia 2015") +
scale_fill_brewer(palette = "Dark2")
install.packages("blogdown")
install.packages("devtools")
# Carga paquetes
library("blogdown")
# Instalar Hugo
blogdown::install_hugo()
#### Cargar un tema para Hugo ####
# Hugo requiere de un tema para poder ser configurado
blogdown::new_site(theme = Dillon/LoveIt)
knit_with_parameters("C:/Users/abel_/OneDrive - Universidad de Concepción/IMTM 2022/Rscript-V2.Rmd")
bookdown:::serve_book()
library(bookdown)
bookdown_site()
knitr::opts_chunk$set(echo = TRUE)
kable(IMTM_2022_rank, digits= 2, caption = "IMTM Region del Biobío", align =
'r', col.names = c("Ranking", "Provincia", "Municipalidades", "Tipología", "IMTM"))
library("readxl")
library("car")
library("dplyr")
library("tidyverse")
library("knitr")
library("modeest")
library("summarytools")
library("psych")
library("sjPlot")
library("ggplot2")
kable(IMTM_2022_rank, digits= 2, caption = "IMTM Region del Biobío", align =
'r', col.names = c("Ranking", "Provincia", "Municipalidades", "Tipología", "IMTM"))
bookdown:::serve_book()
write(IMTM_2022, file = IMTM_2022.rds)
write(IMTM_2022, file = "IMTM_2022.rds")
saveRDS(IMTM_2022, file = "IMTM_2022.rds")
(IMTM_2022_rank, file = "IMTM_2022_rank.rds")
saveRDS(IMTM_2022_rank, file = "IMTM_2022_rank.rds")
View(cuestionarios)
View(GTM)
View(cuestionarios)
View(medidas_seguridad)
saveRDS(medidas_seguridad, file = "medidas_seguridad.rds")
saveRDS(procesos, file = "procesos.rds")
saveRDS(tramites, file = "tramites.rds")
saveRDS(IMTM_2022, file = "IMTM_2022.rds")
saveRDS(IMTM_2022_rank, file = "IMTM_2022_rank.rds")
saveRDS(cuestionarios, file = "Cuestionario.rds")
saveRDS(medidas_seguridad, file = "medidas_seguridad.rds")
saveRDS(procesos, file = "procesos.rds")
saveRDS(tramites, file = "tramites.rds")
