desvest <- sd(Provincia_arauco$IMTM_2022, na.rm = TRUE)
q3 <- quantile(Provincia_arauco$IMTM_2022, probs = 0.75, na.rm = TRUE)
max <- max(Provincia_arauco$IMTM_2022, na.rm = TRUE)
rango <- (max - min)
rango_iq <- (q3 - q1)
s <- skew(Provincia_arauco$IMTM_2022) /sqrt(6/1401)
c <- kurtosi(Provincia_arauco$IMTM_2022) /sqrt(6/1401)
Descriptivos_parauco <- as.numeric(c(min, q1, media, mediana, var, desvest, q3,
max, rango, rango_iq, s, c))
descriptivos <- data.frame(nombres, Descriptivos_pconce, Descriptivos_pbiobio,
Descriptivos_parauco)
kable(descriptivos, digits = 2, align = 'c',
caption = "Estadística descriptiva IMTM 2022 por provincia
Región del Biobío", col.names = c("Descriptivos", "Concepción",
"Biobío", "Arauco"))
cuestionarios$Provincia <- factor(cuestionarios$Provincia)
qplot(data = cuestionarios, x = Provincia, y = IMTM_2022, fill = Provincia,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por provincia 2022")
cuestionarios$Provincia <-factor(cuestionarios$Provincia)
qplot(data = cuestionarios, x = Provincia, y = IMTM_2015, fill = Provincia,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por provincia 2015")
View(IMTM_2022)
View(cuestionarios)
diferencia_dim <- cbind(cuestionarios[1:3], stack(Contrastar[17:20]))
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[17:20]))
View(diferencia_dim)
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
source("~/.active-rstudio-document", echo=TRUE)
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[17:20]))
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
qplot(diferencia_dim, x = Dimensiones, y = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none")
qplot(data = diferencia_dim, x = Dimensiones, y = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none")
knitr::opts_chunk$set(echo = TRUE)
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[17:20]))
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
qplot(data = diferencia_dim, x = Dimensiones, y = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none")
kable(descriptivos, digits = 2, align = 'c', caption =
"Estadística descriptiva Dimensiones IMTM 2022 Región del Biobío",
col.names = c("Descriptivos", "IT", "RRHH", "GTM","SML"))
# Creación Dataframe estadísticos descriptivos por dimensión
descriptivos <- data.frame(nombres, Descriptivos_IT, Descriptivos_RRHH,
Descriptivos_GTM, Descriptivos_SML)
qplot(data = cuestionarios, x = Municipios, y valores)
qplot(data = cuestionarios, x = Municipios, y = IMT_2022)
qplot(data = cuestionarios, x = Municipio, y = IMT_2022)
qplot(data = cuestionarios, x = Municipio, y = IMTM_2022)
qplot(data = cuestionarios, y = Municipio, x = IMTM_2022)
qplot(data = diferencia_dim, y = Dimensiones, x = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none")
qplot(data = contrastar, y = Índice, x = Valores, fill = Índice,
geom = "boxplot", main = "Gráfico de caja IMTM 2015 y 2022") +
scale_fill_discrete(guide = "none")
qplot(data = contrastar, y = Índice, x = Valores, fill = Índice,
geom = "boxplot", main = "Gráfico de caja IMTM 2015 y 2022") +
scale_fill_discrete(guide = "none")
cuestionarios$FIGEM <- factor(cuestionarios$FIGEM)
qplot(data = cuestionarios, x = FIGEM, y = IMTM_2022, fill = FIGEM,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por categoría FIGEM 2022")
cuestionarios$FIGEM <- factor(cuestionarios$FIGEM)
qplot(data = cuestionarios, y = FIGEM, x = IMTM_2022, fill = FIGEM,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por categoría FIGEM 2022")
qplot(data = cuestionarios, x = FIGEM, y = IMTM_2022, fill = FIGEM,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por categoría FIGEM 2022")
qplot(data = cuestionarios, x = FIGEM, y = IMTM_2022, fill = FIGEM,
geom = "boxplot", ylab = "Valor",
main = "Gráfico de caja por categoría FIGEM 2022")
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[17:20]))
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
qplot(data = diferencia_dim, y = Dimensiones, x = Valores, fill = Dimensiones,
geom = "boxplot", main = "Gráfico de caja Dimensiones IMTM 2022") +
scale_fill_discrete(guide = "none")
View(cuestionarios)
knitr::opts_chunk$set(echo = TRUE)
# org_info datos
org_info_c <- c("Alcalde", "Administrador Municipal",
"Administración y finanzas", "SECPLAN", "Otro")
total_org_info <- GTM %>% count(org_info)
View(GTM)
View(RRHH)
# org_info_gráfico
ggplot(Total_org_info, aes(x = org_info_c, y = total_org_info)) +
geom_col(aes(fill = org_info_c), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Dependencia") + scale_y_continuous("Frecuencia") +
labs(title = "Dependencia de la unidad de informática",
subtitle = "Frecuencia de la variable org_info") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_educ_info), vjust = -0.3)
knitr::opts_chunk$set(echo = TRUE)
diferencia_dim <- cbind(cuestionarios[1:3], stack(cuestionarios[17:20]))
diferencia_dim <- rename(diferencia_dim, Valores = values, Dimensiones = ind)
View(Total_num_serv)
%>%
library(dplyr)
# num_serv gráfico
df_means = Total_num_serv %>%
group_by(cant_serv) %>%
summarize(value = mean(cant_serv))
View(df_means)
# num_serv gráfico
df_means = Total_num_serv %>%
group_by(cant_serv) %>%
summarize(value = mean(Total_num_serv))
# num_serv gráfico
df_means = Total_num_serv %>%
group_by(cant_serv) %>%
summarize(value = mean(total_num_serv))
# num_serv gráfico
df_means = Total_num_serv %>%
group_by(cant_serv) %>%
summarize(value = mean(total_serv))
Total_num_serv %>%
ggplot(aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col() +
labs(x = "group")
library(ggplot)
library(ggplot2)
Total_num_serv %>%
ggplot(aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col() +
labs(x = "group")
library(tidyverse)
Total_num_serv %>%
ggplot(aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col() +
labs(x = "group")
ggplot(Total_num_serv, aes(x = fct_reorder(cant_serv, total_serv), y = total_serv)) +
geom_col(aes(fill = cant_serv), colour = "black", position = "dodge",
width = 0.5) + scale_x_discrete("Servidores") + scale_y_continuous("Frecuencia") +
labs(title = "Cantidad de servidores",
subtitle = "Frecuencia de la variable estrategia_servicios") +
scale_fill_discrete(guide = "none") +
geom_text(aes(label = total_serv), vjust = -0.3)
View(Total_seg_info)
(1:4)
(1:4)
lista_seg_info <- c(1:4)
lista_seg_info <- factor(lista_seg_info)
Total_seg_info <- data.frame(lista_seg_info, nombre_seg_info, Total_seg_info)
Total_seg_info <- mutate(Total_seg_info, no_seg_info = (33-Total_seg_info))
# seg_info datos
Total_seg_info <- colSums(medidas_seguridad[ , 4:7], na.rm = TRUE)
nombre_seg_info <- c("Antivirus", "Antispam", "Firewall",
"Autentificación y Criptografia")
lista_seg_info <- c(1:4)
lista_seg_info <- factor(lista_seg_info)
Total_seg_info <- data.frame(lista_seg_info, nombre_seg_info, Total_seg_info)
Total_seg_info <- mutate(Total_seg_info, no_seg_info = (33-Total_seg_info))
row.names(Total_seg_info) <- NULL
kable(Total_seg_info, caption = "Total de medidas de seguridad", align= 'c',
col.names = c("Num", "Medidas de seguridad", "Total", "Faltantes"))
library(knitr)
# seg_info datos
Total_seg_info <- colSums(medidas_seguridad[ , 4:7], na.rm = TRUE)
nombre_seg_info <- c("Antivirus", "Antispam", "Firewall",
"Autentificación y Criptografia")
lista_seg_info <- c(1:4)
lista_seg_info <- factor(lista_seg_info)
Total_seg_info <- data.frame(lista_seg_info, nombre_seg_info, Total_seg_info)
Total_seg_info <- mutate(Total_seg_info, no_seg_info = (33-Total_seg_info))
row.names(Total_seg_info) <- NULL
kable(Total_seg_info, caption = "Total de medidas de seguridad", align= 'c',
col.names = c("Num", "Medidas de seguridad", "Total", "Faltantes"))
# seg_info gráfico
ggplot(Total_seg_info, aes(x = fct_reorder(lista_seg_info, nombre_seg_info),
y = Total_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge") +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad") +
labs(title = "Medidas de seguridad en el municipio",
subtitle = "Frecuencia de los valores del subindice medidas_seguridad") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3)
# seg_info gráfico
ggplot(Total_seg_info, aes(x = fct_reorder(lista_seg_info, nombre_seg_info),
y = nombre_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge") +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad") +
labs(title = "Medidas de seguridad en el municipio",
subtitle = "Frecuencia de los valores del subindice medidas_seguridad") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3)
# seg_info gráfico
ggplot(Total_seg_info, aes(x = fct_reorder(lista_seg_info, nombre_seg_info),
y = Total_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge") +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad") +
labs(title = "Medidas de seguridad en el municipio",
subtitle = "Frecuencia de los valores del subindice medidas_seguridad") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3)
# seg_info gráfico
ggplot(Total_seg_info, aes(x = lista_seg_info,
y = Total_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge") +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad") +
labs(title = "Medidas de seguridad en el municipio",
subtitle = "Frecuencia de los valores del subindice medidas_seguridad") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3)
# seg_info gráfico
ggplot(Total_seg_info, aes(x = lista_seg_info, y = Total_seg_info)) +
geom_col(aes(fill = nombre_seg_info), colour = "black", position = "dodge") +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad") +
labs(title = "Medidas de seguridad en el municipio",
subtitle = "Frecuencia de los valores del subindice medidas_seguridad") +
scale_fill_discrete(name = "Medidas de seguridad") +
geom_text(aes(label = Total_seg_info), vjust = -0.3)
View(cuestionarios)
View(contrastar)
estrategias <- cbind(cuestionarios[1:3], stack(cuestionarios[14:15]))
estrategias <- rename(estrategias, presencia = values, estrategias = ind)
View(estrategias)
ggplot(estrategias, aes(x = presencia, y = estrategias)) +
geom_col(aes(fill = presencia), colour = "black", position = "dodge") +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = presencia, y = estrategias)) +
geom_col(aes(fill = presencia), colour = "black", position = "dodge") +
scale_x_discrete("Presencia") + scale_y_discrete("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = presencia, y = estrategias)) +
geom_col(aes(fill = presencia), colour = "black", position = "dodge") +
scale_x_continuous("Presencia") + scale_y_discrete("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = presencia, y = estrategias)) +
geom_col(aes(fill = presencia), colour = "black", position = "dodge") +
scale_x_continuous("Presencia") + scale_y_discrete("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = estrategias, y = presencia)) +
geom_col(aes(fill = estrategias), colour = "black", position = "dodge") +
scale_x_continuous("Presencia") + scale_y_discrete("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = estrategias, y = presencia, fill = estrategias)) +
geom_col(position = "dodge")
ggplot(estrategias, aes(x = estrategias, y = presencia, fill = presencia)) +
geom_col(position = "dodge")
ggplot(estrategias, aes(x = estrategias, y = presencia, fill = estrategias)) +
geom_col(position = "dodge")
estrategias$presencia <- factor(estrategias$presencia)
View(estrategias)
ggplot(estrategias, aes(x = estrategias, y = presencia, fill = estrategias)) +
geom_col(position = "dodge")
ggplot(estrategias, aes(x = estrategias, y = presencia)) +
geom_col(aes(fill = estrategias), colour = "black", position = "dodge") +
scale_x_continuous("Presencia") + scale_y_discrete("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = estrategias, y = presencia)) +
geom_col(aes(fill = estrategias), colour = "black", position = "dodge") +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
ggplot(estrategias, aes(x = estrategias, y = presencia, fill = estrategias)) +
geom_col(position = "dodge")
estrategias <- cbind(cuestionarios[1:3], stack(cuestionarios[14:15]))
estrategias <- rename(estrategias, presencia = values, estrategias = ind)
estrategias$presencia <- factor(estrategias$presencia)
ggplot(estrategias, aes(x = estrategias, y = presencia)) +
geom_col(aes(fill = estrategias), colour = "black", position = "dodge") +
scale_x_discrete("Presencia") + scale_y_continuous("Cantidad") +
labs(title = "Presencia de área informática municipal",
subtitle = "Frecuencia de la variable area_info") +
scale_fill_discrete(guide = "none")
estrategias <- cbind(cuestionarios[1:3], stack(cuestionarios[14:15]))
estrategias <- rename(estrategias, presencia = values, estrategias = ind)
source("~/.active-rstudio-document", echo=TRUE)
estrategias <- melt(cuestionarios[,c("Municipio", "estrategia_servicios",
"estrategia_gestion")], id.vars = 1 )
library(reshape2)
estrategias <- melt(cuestionarios[,c("Municipio", "estrategia_servicios",
"estrategia_gestion")], id.vars = 1 )
View(estrategias)
r
ggplot(estrategias, aes(x = Municipios, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
scale_y_log10()
ggplot(estrategias, aes(x = Municipio, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
scale_y_log10()
ggplot(estrategias, aes(x = variable, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
scale_y_log10()
DF <- data.frame(group = c("bananas", "apples", "pears"),
season1 = c(1,6,3),
season2 = c(4,10,5),
season3 = c(5,8,10),
season4 = c(7,2,4))
View(DF)
View(cuestionarios)
estrategias_ggplot <- cuestionarios %>% gather(key = estrategias,
value = Presencia, estrategia_servicios:estrategia_gestion)
View(estrategias_ggplot)
+ geom_col(position = "dodge")
ggplot(estrategias_ggplot, aes(estrategias, Presencia, fill = Provincia))
ggplot(estrategias_ggplot, aes(estrategias, Presencia, fill = Municipios))
ggplot(estrategias_ggplot, aes(estrategias, Presencia, fill = Municipio))
# cleveland procesos
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 3) +  # Use a larger dot
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed")
)
# cleveland procesos
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 3) +  # Use a larger dot
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed")
)
args(geom_point)
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 3) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos") +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos") +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "grey60", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos") +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "darkorange", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos") +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "darkorange4", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos") +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
args(labs)
# Poner los nombres, ordenarlos primero por provincia y luego por IMTM
nameorder <- IMTM_2022$Municipio[order(IMTM_2022$Provincia,
IMTM_2022$IMTM_2022)]
# Convertir nombres en factor, con niveles en el orden de nameorder
IMTM_2022$Municipio <- factor(IMTM_2022$Municipio, levels = nameorder)
ggplot(IMTM_2022, aes(x = IMTM_2022, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 3, aes(colour = Provincia)) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(1, 0.55), legend.justification = c(1, 0.5))
# Poner los nombres, ordenarlos primero por provincia y luego por IMTM
nameorder <- IMTM_2022$Municipio[order(IMTM_2022$Provincia,
IMTM_2022$IMTM_2022)]
# Convertir nombres en factor, con niveles en el orden de nameorder
IMTM_2022$Municipio <- factor(IMTM_2022$Municipio, levels = nameorder)
ggplot(IMTM_2022, aes(x = IMTM_2022, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 3, aes(colour = Provincia)) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(1, 0.55), legend.justification = c(1, 0.5))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos", ) +
scale_x_discrete("Medidas de seguridad") + scale_y_continuous("Cantidad")
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos", ) +
scale_x_continuous("Medidas de seguridad") + scale_y_discrete("Cantidad")
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos", ) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos",
y = "Procesos" ) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
ggplot(Total_procesos, aes(x = Total_proceso,
y = reorder(nombre_proceso, Total_proceso))) +
geom_point(size = 5) + labs(title = "Cantidad de procesos informatizados",
subtitle = "Frecuencia de la variable del subindice procesos",
y = "Nombre procesos", x = "Total de procesos municipales" ) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
ggplot(Total_tramites, aes(x = Total_tramite,
y = reorder(nombre_tramite, Total_tramite))) +
geom_point(size = 2) + labs(title = "Cantidad de trámites informatizados",
subtitle = "Frecuencia del subindice tramites",
y = "Nombre trámite", x = "Total de trámites municipales" ) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
ggplot(Total_tramites, aes(x = Total_tramite,
y = reorder(nombre_tramite, Total_tramite))) +
geom_point(size = 2) + labs(title = "Cantidad de trámites informatizados",
subtitle = "Frecuencia del subindice tramites",
y = "Nombre trámite", x = "Total de trámites municipales" ) +
theme_bw() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "gold", linetype = "dashed"))
cor(cuestionarios$FIGEM, cuestionarios$IMTM_2022, use="everything",
method=c("pearson", "kendall", "spearman"))
View(IMTM_2022)
cor(IMTM_2022$FIGEM, IMTM_2022$IMTM_2022, use = "everything",
method=c("pearson", "kendall", "spearman"))
correlacion <- na.omit(IMTM_2022)
View(correlacion)
cor(correlacion$FIGEM, correlacion$IMTM_2022, use = "everything",
method=c("pearson", "kendall", "spearman", na))
cor(correlacion$FIGEM, correlacion$IMTM_2022, use = "everything",
method=c("pearson", "kendall", "spearman"))
cor(cuestionarios$estrategia_servicios, cuestionarios$IMTM_2022, use = "everything",
method=c("pearson", "kendall", "spearman"))
correlacion <- na.omit(cuestionarios) %>%
cor(correlacion$estrategia_)
correlacion <- na.omit(cuestionarios) #%>%
correlacion <- na.omit(cuestionarios) %>%
cor(correlacion$estrategia_servicios, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman")) )
correlacion <- na.omit(cuestionarios) %>%
cor(correlacion$estrategia_servicios, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
hay_correlacion <- cor(correlacion$estrategia_servicios, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$estrategia_servicios, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$estrategia_gestion, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$Provincia, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$intranet, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$seg_info, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$num_serv, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$tramites, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$IT, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$RRHH, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$GTM, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
cor(correlacion$SML, correlacion$IMTM_2022,
use = "everything", method=c("pearson", "kendall", "spearman"))
# Poner los nombres, ordenarlos primero por provincia y luego por IMTM
nameorder <- IMTM_2022$Municipio[order(IMTM_2022$Provincia,
IMTM_2022$IMTM_2022)]
# Convertir nombres en factor, con niveles en el orden de nameorder
IMTM_2022$Municipio <- factor(IMTM_2022$Municipio, levels = nameorder)
ggplot(IMTM_2022, aes(x = IMTM_2022, y = Municipio)) +
geom_segment(aes(yend = Municipio), xend = 0, colour = "grey50") +
geom_point(size = 3, aes(colour = Provincia)) +
labs(title = "IMTM municipios de la región del Biobío por provincia",
subtitle = "valores de la variable IMTM_2022",
y = "Municipios", x = "Valores" ) +
scale_colour_brewer(palette = "Set1", limits = c("Concepción", "Biobío",
"Arauco")) +
theme_bw() + theme(panel.grid.major.y = element_blank(),
legend.position = c(1, 0.55), legend.justification = c(1, 0.5))
